# Generated by Django 2.2.9 on 2020-01-20 22:11

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import itembase.core.models
import phonenumber_field.modelfields
import simple_history.models
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(max_length=20, verbose_name='Address Type')),
                ('usage', models.CharField(choices=[('L', 'Location'), ('V', 'Vendor'), ('C', 'Client')], max_length=1, verbose_name='Gender')),
                ('fa_string', models.CharField(blank=True, max_length=50, null=True, verbose_name='FA String')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='address_type_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Brand')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_code', models.CharField(max_length=10, unique=True, verbose_name='Client Code')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='client_code', unique=True)),
                ('service_start', models.DateField(default=django.utils.timezone.now, verbose_name='Service Start')),
                ('service_end', models.DateField(blank=True, null=True, verbose_name='Service End')),
                ('imp_fee_status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Billed'), (3, 'Partially Paid'), (4, 'Paid')], default=1, verbose_name='Implementation Fee Status')),
                ('client_status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Under Implementation'), (3, 'HyperCare Period'), (4, 'Live'), (5, 'Inactive')], default=1, verbose_name='Client Status')),
                ('production_support_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Production Support Number')),
                ('approved', models.BooleanField(default=False)),
                ('upload_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Upload Address')),
                ('iq_support_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='IQ Support Address')),
                ('logo', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=itembase.core.models.client_logo_directory_path, verbose_name='Image')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='EngagementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_description', models.CharField(max_length=100, verbose_name='Service')),
                ('service_abbreviation', models.CharField(max_length=10)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Engagement Type',
                'verbose_name_plural': 'Engagement Types',
            },
        ),
        migrations.CreateModel(
            name='FeeGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='fee_group_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Fee Group',
                'verbose_name_plural': 'Fee Groups',
            },
        ),
        migrations.CreateModel(
            name='InstallBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Install Base',
                'verbose_name_plural': 'Install Bases',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_id', models.CharField(max_length=50, verbose_name='Location ID')),
                ('name', models.CharField(max_length=150, verbose_name='Primary Name')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='location_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
        ),
        migrations.CreateModel(
            name='StaffRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=30)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='staff_roles_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Staff Role',
                'verbose_name_plural': 'Staff Roles',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Unit')),
                ('abbreviation', models.CharField(max_length=15, verbose_name='Abbreviation')),
                ('description', models.CharField(max_length=150, verbose_name='Description')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='uom_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Unit of Measure',
                'verbose_name_plural': 'Units of Measure',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name1', models.CharField(max_length=150, verbose_name='Primary Name')),
                ('name2', models.CharField(blank=True, max_length=100, verbose_name='Additional Name ')),
                ('taxid', models.CharField(blank=True, max_length=15, verbose_name='Tax ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('num_items', models.IntegerField(blank=True, null=True, verbose_name='Number of Items')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendor_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_vendor', to='core.Vendor', verbose_name='Parent Vendor')),
            ],
        ),
        migrations.CreateModel(
            name='VendorItem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('item_number', models.CharField(max_length=100, verbose_name='Item Number')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('pack_count', models.CharField(max_length=50, verbose_name='Package Count')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='item_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='unitofmeasure', to='core.UnitOfMeasure', verbose_name='UOM')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendoritems', to='core.Vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Item Data',
                'verbose_name_plural': 'Item Data',
            },
        ),
        migrations.CreateModel(
            name='VendorAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=3, null=True, verbose_name='Country')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('primary', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('address_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.AddressType', verbose_name='Address Type')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_address_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vendor_address', to='core.Vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'Vendor Address',
                'verbose_name_plural': 'Vendor Addresses',
            },
        ),
        migrations.CreateModel(
            name='SystemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='ERP', max_length=5)),
                ('typename', models.CharField(max_length=50)),
                ('purpose', models.TextField(blank=True, verbose_name='System Use')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='system_type_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'System Type',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='System Name')),
                ('version', models.CharField(max_length=15, verbose_name='Version')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Brand')),
                ('install_base', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.InstallBase', verbose_name='Install Base')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.SystemType', verbose_name='System Type')),
            ],
            options={
                'verbose_name': 'System',
                'unique_together': {('brand', 'name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='StaffTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='staff_title_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Staff Title',
                'verbose_name_plural': 'Staff Titles',
            },
        ),
        migrations.CreateModel(
            name='StaffShift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=5, verbose_name='Code')),
                ('name', models.CharField(max_length=30, verbose_name='Shift Name')),
                ('start_time', models.TimeField(verbose_name='Starts UTC')),
                ('end_time', models.TimeField(verbose_name='Ends UTC')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='staff_shift_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
            },
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('second_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Second Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1, verbose_name='Gender')),
                ('joined_on', models.DateField(verbose_name='Joined IQ On')),
                ('departed_on', models.DateField(blank=True, null=True, verbose_name='Left IQ On')),
                ('arch_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Archimedes ID')),
                ('emp_id', models.IntegerField(blank=True, null=True, verbose_name='Employee ID')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='staff_member_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.StaffShift')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.StaffTitle', verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Staff Member',
                'verbose_name_plural': 'Staff Members',
                'ordering': ['first_name', 'second_name', 'last_name'],
                'unique_together': {('first_name', 'second_name', 'last_name')},
            },
        ),
        migrations.CreateModel(
            name='LocationAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=3, null=True, verbose_name='Country')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('primary', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('address_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.AddressType', verbose_name='Address Type')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='location_address_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='location_address', to='core.Location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='HolidayList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Description')),
                ('date_from', models.DateField(default=django.utils.timezone.now, verbose_name='Date Start')),
                ('date_to', models.DateField(default=django.utils.timezone.now, verbose_name='Date End')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='holiday_list_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Holiday',
                'verbose_name_plural': 'Holidays',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVendorItem',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('item_number', models.CharField(max_length=100, verbose_name='Item Number')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('pack_count', models.CharField(max_length=50, verbose_name='Package Count')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('uom', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.UnitOfMeasure', verbose_name='UOM')),
                ('vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'historical Item Data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVendorAddress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address1', models.CharField(max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=3, null=True, verbose_name='Country')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('primary', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('address_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.AddressType', verbose_name='Address Type')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'historical Vendor Address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalVendor',
            fields=[
                ('id', models.BigIntegerField(blank=True, db_index=True)),
                ('name1', models.CharField(max_length=150, verbose_name='Primary Name')),
                ('name2', models.CharField(blank=True, max_length=100, verbose_name='Additional Name ')),
                ('taxid', models.CharField(blank=True, max_length=15, verbose_name='Tax ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('num_items', models.IntegerField(blank=True, null=True, verbose_name='Number of Items')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Vendor', verbose_name='Parent Vendor')),
            ],
            options={
                'verbose_name': 'historical vendor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUnitOfMeasure',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, verbose_name='Unit')),
                ('abbreviation', models.CharField(max_length=15, verbose_name='Abbreviation')),
                ('description', models.CharField(max_length=150, verbose_name='Description')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Unit of Measure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeamMember',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('valid_from', models.DateField(default=django.utils.timezone.now, verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid Until')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'status': 2}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.StaffRoles', verbose_name='Role')),
                ('staff', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'status': 2}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.StaffMember', verbose_name='Staff')),
            ],
            options={
                'verbose_name': 'historical Team Member',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSystemType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(default='ERP', max_length=5)),
                ('typename', models.CharField(max_length=50)),
                ('purpose', models.TextField(blank=True, verbose_name='System Use')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical System Type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStaffTitle',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Staff Title',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStaffShift',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('code', models.CharField(max_length=5, verbose_name='Code')),
                ('name', models.CharField(max_length=30, verbose_name='Shift Name')),
                ('start_time', models.TimeField(verbose_name='Starts UTC')),
                ('end_time', models.TimeField(verbose_name='Ends UTC')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Shift',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStaffRoles',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('role', models.CharField(max_length=30)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Staff Role',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStaffMember',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('second_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Second Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')], max_length=1, verbose_name='Gender')),
                ('joined_on', models.DateField(verbose_name='Joined IQ On')),
                ('departed_on', models.DateField(blank=True, null=True, verbose_name='Left IQ On')),
                ('arch_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Archimedes ID')),
                ('emp_id', models.IntegerField(blank=True, null=True, verbose_name='Employee ID')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('shift', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.StaffShift')),
                ('title', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.StaffTitle', verbose_name='Title')),
            ],
            options={
                'verbose_name': 'historical Staff Member',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocationAddress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address1', models.CharField(max_length=255, verbose_name='Address 1')),
                ('address2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=3, null=True, verbose_name='Country')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('primary', models.BooleanField(default=False)),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('address_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.AddressType', verbose_name='Address Type')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'historical address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('loc_id', models.CharField(max_length=50, verbose_name='Location ID')),
                ('name', models.CharField(max_length=150, verbose_name='Primary Name')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHolidayList',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Description')),
                ('date_from', models.DateField(default=django.utils.timezone.now, verbose_name='Date Start')),
                ('date_to', models.DateField(default=django.utils.timezone.now, verbose_name='Date End')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Holiday',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFeeItem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('fee_group', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.FeeGroup', verbose_name='Fee Group')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fee Item',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFeeGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fee Group',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEngagementType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('service_description', models.CharField(max_length=100, verbose_name='Service')),
                ('service_abbreviation', models.CharField(max_length=10)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Engagement Type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('contact_type', models.SmallIntegerField(choices=[(1, 'Person'), (2, 'Business')], default=1, verbose_name='Contact Type')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Location', verbose_name='Location')),
                ('vendor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Vendor', verbose_name='Vendor')),
            ],
            options={
                'verbose_name': 'historical contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClientSystem',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('have_access', models.BooleanField(default=True, verbose_name='Access?')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('client', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Client', verbose_name='Client')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('system', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.System', verbose_name='System')),
            ],
            options={
                'verbose_name': 'historical Client System',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClient',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('client_code', models.CharField(db_index=True, max_length=10, verbose_name='Client Code')),
                ('client_name', models.CharField(max_length=100, verbose_name='Client Name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='client_code')),
                ('service_start', models.DateField(default=django.utils.timezone.now, verbose_name='Service Start')),
                ('service_end', models.DateField(blank=True, null=True, verbose_name='Service End')),
                ('imp_fee_status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Billed'), (3, 'Partially Paid'), (4, 'Paid')], default=1, verbose_name='Implementation Fee Status')),
                ('client_status', models.SmallIntegerField(choices=[(1, 'New'), (2, 'Under Implementation'), (3, 'HyperCare Period'), (4, 'Live'), (5, 'Inactive')], default=1, verbose_name='Client Status')),
                ('production_support_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Production Support Number')),
                ('approved', models.BooleanField(default=False)),
                ('upload_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Upload Address')),
                ('iq_support_address', models.EmailField(blank=True, max_length=254, null=True, verbose_name='IQ Support Address')),
                ('logo', models.TextField(blank=True, max_length=100, null=True, verbose_name='Image')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('engagement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.EngagementType', verbose_name='Engagement Type')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Client', verbose_name='Parent Client')),
            ],
            options={
                'verbose_name': 'historical Client',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBrand',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Brand')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical brand',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAddressType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address_type', models.CharField(max_length=20, verbose_name='Address Type')),
                ('usage', models.CharField(choices=[('L', 'Location'), ('V', 'Vendor'), ('C', 'Client')], max_length=1, verbose_name='Gender')),
                ('fa_string', models.CharField(blank=True, max_length=50, null=True, verbose_name='FA String')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(blank=True, editable=False, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(blank=True, editable=False, verbose_name='Updated On')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical address type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='FeeItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50, verbose_name='Item')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('fee_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.FeeGroup', verbose_name='Fee Group')),
            ],
            options={
                'verbose_name': 'Fee Item',
                'verbose_name_plural': 'Fee Items',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('contact_type', models.SmallIntegerField(choices=[(1, 'Person'), (2, 'Business')], default=1, verbose_name='Contact Type')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contact_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Location', verbose_name='Location')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Vendor', verbose_name='Vendor')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='engagement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.EngagementType', verbose_name='Engagement Type'),
        ),
        migrations.AddField(
            model_name='client',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.Client', verbose_name='Parent Client'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_from', models.DateField(default=django.utils.timezone.now, verbose_name='Valid From')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Valid Until')),
                ('status', models.IntegerField(choices=[(1, 'New'), (2, 'Valid'), (3, 'Inactive')], default=1, verbose_name='Status')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Created On')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.Client', verbose_name='Client')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='team_member_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('role', models.ForeignKey(limit_choices_to={'status': 2}, on_delete=django.db.models.deletion.PROTECT, to='core.StaffRoles', verbose_name='Role')),
                ('staff', models.ForeignKey(limit_choices_to={'status': 2}, on_delete=django.db.models.deletion.PROTECT, to='core.StaffMember', verbose_name='Staff')),
            ],
            options={
                'verbose_name': 'Team Member',
                'verbose_name_plural': 'Team Members',
                'unique_together': {('staff', 'client', 'status')},
            },
        ),
        migrations.CreateModel(
            name='ClientSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('have_access', models.BooleanField(default=True, verbose_name='Access?')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_systems', to='core.Client', verbose_name='Client')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.System', verbose_name='System')),
            ],
            options={
                'verbose_name': 'Client System',
                'unique_together': {('client', 'system')},
            },
        ),
    ]
